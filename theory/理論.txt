末端がQSDであるセグメントを並列に生成し、繋ぎ合わせて統計的に正しい軌道を生成する加速MD手法について考える。
この手法は以下の3要素のみで構成される。

1. どの計算コアがどの状態から計算を始めるかを動的に決めるスケジューリングアルゴリズム
2. セグメント計算をいつ停止するかを決定する停止時刻アルゴリズム
3. 得られたセグメントをどのように結合するかを決定するスプライシングアルゴリズム

1は加速効率にのみ影響し、統計的正確性には影響しない。
2と3は全く独立ではなく、最終的な軌道の統計的正確性を担保するため、3は2に強く依存する。本稿では、まず2の停止時刻アルゴリズムについて考察する。

停止時刻アルゴリズムは、同じ初期状態から同時に生成される複数のセグメント群について、それらの停止時刻が互いに相関を持つか持たないかによって二つに大別できる。

相関を持たない場合、スプライシングアルゴリズムは、得られたセグメントを単純にランダムに結合すればよい。これは、既存のParSplice手法の考え方を自然に拡張したものと見なせる。
このことから、本稿で扱う任意の加速MDアルゴリズムは、「ParSpliceの自然な拡張」と、後述する「停止時刻が相関を持つアルゴリズム」の組み合わせで表現できると考える。

次に、同じ初期状態から同時に生成されたセグメント群の停止時刻が相関を持つ場合について考える。
このようなアルゴリズムでは、ある初期状態から生成されたセグメント群Gは、他のセグメント群と混ぜることなく、G内部で完結して軌道を構成しなければならない。なぜなら、停止時刻の相関（例えば、あるセグメントが特定のイベントを観測したことをトリガーに、他のセグメントも停止させるなど）は、その群内でのみ統計的な意味を持つからである。したがって、たとえGと同じ初期状態を持つセグメントがGの外部に存在したとしても、それらをGと混合してスプライシングすることは統計的正確性を損なうため許されない。

このセグメント群Gについて詳しく見ていこう。
Gの中で、初期状態から別の状態へ遷移したセグメントが1本だけ必ず生成される状況を考える。この場合、遷移しなかったセグメントをすべて先に結合し、最後に遷移したセグメントを繋ぐことで、統計的に正しい1本の長い軌道を生成できる（これは数学的に証明可能である）。この方法は、1つでも遷移が観測された瞬間に、同じ初期状態から計算していた全てのセグメントを停止させるという点で、ParRep（Parallel Replica Dynamics）の考え方を一般化した「拡張ParRep」と見なすことができる。
では遷移したセグメントがk本(k>=2)あったとしよう。
無駄なくセグメントを使うためには少なくともk本の軌道を作成する必要がある(遷移したセグメントは軌道の最後にしか繋げないため)。
もしk本の統計的に正しい軌道を作るスプライシングアルゴリズムがあったとしても、これはGをk個のグループに分けてそれぞれで拡張ParRepを回したものと等しい結果が得られる(こちらもk本の軌道が得られるため)。
したがって、Gにおける任意の停止時刻アルゴリズムは拡張ParRepのみで表現(あるいは近似)することができる。